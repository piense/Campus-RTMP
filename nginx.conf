
user  www-data;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

rtmp {
	server {
		listen 1935;
		allow play all;
		buflen 300;

		publish_time_fix off;

		application live {
			allow play all;
			live on;
#			record all;
#			record_path /video_recordings;
#			record_unique on;
			hls on;
			hls_nested on;
			hls_path /HLS/live;
			hls_fragment 2s;
			hls_playlist_length 6s;

			dash on;
			dash_path /HLS/dash;
			dash_fragment 2s;
			dash_playlist_length 6s;
						

#			exec ffmpeg -i rtmp://plexserver.fefcful.org/live/worshipcenter -acodec copy -c:v libx264 -preset veryfast -profile:v baseline -vsync cfr -s 480x360 -b:v 400k -maxrate 400k -bufsize 400k -threads 0 -r 30 -f flv rtmp://plexserver.fefcful.org:1935/mobile/worshipcenter;
#			exec ffmpeg -i rtmp://localhost/$app/$name -threads 2 -c:v libx264 -profile:v baseline -g 10 -b:v300K -s 320x240 -c:a aac -ac 1 -strict -2 -b:a 64k -f flv rtmp://localhost/dash/${name};	
		}


#		application mobile {
#			allow play all;
#			live on;
#			hls on;
#			hls_nested on;
#			hls_path /HLS/mobile;
#			hls_fragment 10s;
#		}

#		application vod {
#			play /video_recordings;
#		}
	}
}

http {
	include mime.types;
	default_type appliation/octet-stream;
	server {
		listen 8090;
		server_name plexserver.fefcful.org;

		location /basic_status {
			stub_status;
		}

#		location /status {
#			status;
#		}

		location /stat {
			rtmp_stat all;
			rtmp_stat_stylesheet stat.xsl;
		}

		location /stat.xsl {
			root html;
		}
		
		location /live {
			types {
				application/vnd.apple.mpegurl m3u8;
			}
			alias /HLS/live;
			add_header Cache-Control no-cache;
		}

		location /dash {
			alias /HLS/dash;

		      # necessary if media files contain more than one DASH fragment
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        
				# Custom headers and headers various browsers *should* be OK with but aren't
				add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        
				# Tell client that this pre-flight info is valid for 20 days
				add_header 'Access-Control-Max-Age' 1728000;
        
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				add_header 'Access-Control-Allow-Origin' '*';
     
				return 200;
			}
        
			if ($request_method = 'GET') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			}
      
      
			# necessary for live content (manifest must always be loaded from server, not from cache)
			add_header Cache-Control no-cache;
		}

		location ~ \.php$ {
			include fastcgi.conf;
			fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		}

		location / {
			root html;
			index index.html index.htm;
		}
	}

}
